import traceback
import sys, hashlib
from discord.ext import commands
import discord
import datetime as dt

class CommandErrorHandler(commands.Cog):
    """Error handler"""
    def __init__(self, bot):
        self.bot = bot
        self.perm_tl = {'add_reactions': '–¥–æ–±–∞–≤–ª—è—Ç—å —Ä–µ–∞–∫—Ü–∏–∏',
                          'administrator': '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                          'attach_files': '–ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å —Ñ–∞–π–ª—ã',
                          'ban_members': '–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                          'change_nickname': '–º–µ–Ω—è—Ç—å –Ω–∏–∫–Ω–µ–π–º',
                          'connect': '–ø–æ–¥–∫–ª—é—á–∞—Ç—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º',
                          'create_instant_invite': '—Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ',
                          'deafen_members': '–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                          'embed_links': '–ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å —Å—Å—ã–ª–∫–∏',
                          'external_emojis': '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —ç–º–æ–¥–∑–∏',
                          'kick_members': '–≤—ã–≥–æ–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                          'manage_channels': '—É–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–Ω–∞–ª–∞–º–∏',
                          'manage_emojis': '—É–ø—Ä–∞–≤–ª—è—Ç—å —ç–º–æ–¥–∑–∏',
                          'manage_guild': '—É–ø—Ä–∞–≤–ª—è—Ç—å —Å–µ—Ä–≤–µ—Ä–æ–º',
                          'manage_messages': '—É–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏',
                          'manage_nicknames': '—É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∏–∫–Ω–µ–π–º–∞–º–∏',
                          'manage_permissions': '—É–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∞–≤–∞–º–∏',
                          'manage_roles': '—É–ø—Ä–∞–≤–ª—è—Ç—å —Ä–æ–ª—è–º–∏',
                          'manage_webhooks': '—É–ø—Ä–∞–≤–ª—è—Ç—å –≤–µ–±—Ö—É–∫–∞–º–∏',
                          'mention_everyone': '—É–ø–æ–º–∏–Ω–∞—Ç—å –≤—Å–µ—Ö',
                          'move_members': '–ø–µ—Ä–µ–º–µ—â–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                          'mute_members': '–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                          'priority_speaker': '–ø—Ä–∏—Ä–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Å–ø–∏–∫–µ—Ä',
                          'read_message_history': '—á–∏—Ç–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π',
                          'read_messages': '—á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è',
                          'send_messages': '–æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è',
                          'send_tts_messages': '–æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å TTS-—Å–æ–æ–±—â–µ–Ω–∏—è',
                          'speak': '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∏–∫—Ä–æ—Ñ–æ–Ω',
                          'stream': '—Å—Ç—Ä–∏–º–∏—Ç—å',
                          'use_external_emojis': '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —ç–º–æ–¥–∑–∏',
                          'use_voice_activation': '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø–æ –≥–æ–ª–æ—Å—É',
                          'view_audit_log': '–ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∂—É—Ä–Ω–∞–ª –∞—É–¥–∏—Ç–∞',
                          'view_channel': '–ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–∞–Ω–∞–ª—ã',
                          'view_guild_insights': 'view_guild_insights',
                          'voice': '–ø–æ–¥–∫–ª—é—á–∞—Ç—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º'}
        self.userToReport = None
        self.chnToReport = None














    @commands.Cog.listener()
    async def on_command_error(self, ctx, error):

        if hasattr(ctx.command, 'on_error'):
            return
        
        ignored = (commands.CommandNotFound)
        ignored2 = (commands.BadArgument, commands.UserInputError)
        error = getattr(error, 'original', error)
        
        if isinstance(error, ignored):
            return
        else:
            if not isinstance(error, ignored2): 
                await ctx.message.add_reaction('üö´')

            if isinstance(error, commands.DisabledCommand):
                return

            elif isinstance(error, commands.NoPrivateMessage):
                await ctx.send(embed=discord.Embed(timestamp=ctx.message.created_at, title=f'–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ –õ–°.', color=discord.Colour.red()).set_footer(text=self.bot.user.name))
                return

            elif isinstance(error, commands.BadArgument):
                # await ctx.send(embed=discord.Embed(timestamp=ctx.message.created_at, title='–û—à–∏–±–∫–∞', description=f'You give me bad argument for command  `{ctx.command}`.', color=discord.Colour.red()).set_footer(text=self.bot.user.name))
                ctx.command.reset_cooldown(ctx)
                await ctx.invoke(self.bot.get_command("help"), command=str(ctx.command))
                return

            elif isinstance(error, commands.UserInputError):
                # await ctx.send(embed=discord.Embed(timestamp=ctx.message.created_at, title='–û—à–∏–±–∫–∞', description=f'You forgot to give me required arguments\nArguments for command `{ctx.command}`: {ctx.command.signature}', color=discord.Colour.red()).set_footer(text=self.bot.user.name))
                ctx.command.reset_cooldown(ctx)
                await ctx.invoke(self.bot.get_command("help"), command=str(ctx.command))
                return
            elif isinstance(error, commands.NotOwner):
                return
            elif isinstance(error, commands.errors.CommandOnCooldown):
                r = error.retry_after
                retry_after = str(dt.timedelta(seconds=int(r)))
                titles = {'lottery': '–ê–∑–∞—Ä—Ç–Ω—ã–µ –∏–≥—Ä—ã —ç—Ç–æ –ø–ª–æ—Ö–æ, –Ω–µ –∏–≥—Ä–∞–π—Ç–µ –≤ –Ω–∏—Ö —á–∞—Å—Ç–æ!', 'daily': '–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–µ–ø–µ–Ω–¥–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏!'}
                title = '–ù–µ —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ!'
                if ctx.command.name in titles: title = titles[ctx.command.name]
                await ctx.send(embed=discord.Embed(timestamp=ctx.message.created_at, title=title, description=f'–ü–æ–¥–æ–∂–¥–∏—Ç–µ {retry_after.split(".")[0]} –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º.', color=discord.Colour.red()).set_footer(text=self.bot.user.name))
                return
            elif isinstance(error, commands.errors.MissingPermissions):
                i = 0
                perms = []
                for perm in error.missing_perms:
                    i += 1
                    try: p = f'{i}. {self.perm_tl[perm]}'
                    except: p = f'{i}. {perm} (Translate is not yet completed)'
                    if i != len(error.missing_perms): p += ';'
                    perms.append(p)
                perms = '\n'.join(perms)
                await ctx.send(embed=discord.Embed(timestamp=ctx.message.created_at, title=f'–£ –≤–∞—Å –Ω–µ—Ç —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã:', description=f'```md\n{perms}\n```', color=discord.Colour.red()).set_footer(text=self.bot.user.name))
                return
            elif isinstance(error, commands.MissingAnyRole):
                i = 0
                roles = []
                for role in error.missing_roles:
                    i += 1
                    r = f'{i}. {role}'
                    if i != len(error.missing_roles): r += ';'
                    roles.append(r)
                roles = '\n'.join(roles)
                await ctx.send(embed=discord.Embed(timestamp=ctx.message.created_at, title=f'–£ –≤–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∏–∑ –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã `{ctx.command}`:', description=f'```md\n{roles}\n```', color=discord.Colour.red()).set_footer(text=self.bot.user.name))
                return
            elif isinstance(error, commands.MissingRole):
                await ctx.send(embed=discord.Embed(timestamp=ctx.message.created_at, title=f'–£ –≤–∞—Å –Ω–µ—Ç —Ä–æ–ª–∏ `{error.missing_role}` –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã', color=discord.Colour.red()).set_footer(text=self.bot.user.name))
                return
            elif isinstance(error, commands.NSFWChannelRequired):
                await ctx.send(embed=discord.Embed(timestamp=ctx.message.created_at, title=f'–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ NSFW-–∫–∞–Ω–∞–ª–µ', color=discord.Colour.red()).set_footer(text=self.bot.user.name))
                return
            elif isinstance(error, discord.Forbidden):
                if ctx.command.name in ('ban', 'kick'): return
                perms = discord.Permissions(error.code)
                needperms = [x for x in dir(perms) if not x.startswith('_') if getattr(perms, x) == True]
                strperms = []
                i = 0
                for perm in needperms:
                    i += 1
                    r = f'{i}. {perm}'
                    if i != len(needperms): r += ';'
                    strperms.append(r)
                strperms = '\n'.join(strperms)
                await ctx.send(embed=discord.Embed(timestamp=ctx.message.created_at, title=f'–£ –º–µ–Ω—è –Ω–µ—Ç —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã:', description=f'```md\n{strperms}\n```', color=discord.Colour.red()).set_footer(text=self.bot.user.name))
                return
        user = await self.bot.read_json('config.json')
        chn = await self.bot.read_json('config.json')
        err = "\n".join(traceback.format_exception(type(error), error, error.__traceback__))
        user = await self.bot.fetch_user(user['bug report user'])
        chn = await self.bot.fetch_channel(chn['bug report channel'])
        try: await chn.send(embed=discord.Embed(title='SCBot Error', description=f'''Command: `{ctx.command}`\nCalled in: {ctx.channel} (called by {ctx.author})\n\nMessage: ```\n{ctx.message.content}\n```''').set_footer(text=f'Ray ID: {hashlib.md5(bytes(err, "utf8")).hexdigest()}'))
        finally: 
            try: await ctx.send(embed=discord.Embed(title='–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.', description='–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —ç—Ç—É –æ—à–∏–±–∫—É –º–æ–µ–º—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –∏ –æ–Ω –∏—Å–ø—Ä–∞–≤–∏—Ç –µ—ë –≤ —Å–∫–æ—Ä–æ–µ –≤—Ä–µ–º—è!', color=discord.Colour.red()))
            finally: await user.send(f'Error with executing command {ctx.command}\nCalled by: {ctx.author}\nCalled in: {ctx.guild} > {ctx.channel}\nError: ```py\n{err}\n```')
    @commands.command(name='test-eh', hidden=True)
    @commands.is_owner()
    async def t(self, ctx):
        '''none'''
        ctx.goFuck

def setup(bot):
    bot.add_cog(CommandErrorHandler(bot))